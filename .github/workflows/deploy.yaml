# .github/workflows/deploy.yml
name: Deploy
on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
jobs:
  deploy-cert-manager:
    name: "Deploy Cert Manager"
    runs-on: "ubuntu-latest"
    container:
      image: vr00mm/docker-helm-client:v0.1.0
      env:
        KUBECONFIG: "/tmp/kubeconfig"
    steps:
      - name: Load Workspace
        uses: actions/checkout@v2
      - name: Init Kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" > /tmp/kubeconfig
          chmod 0600 /tmp/kubeconfig
      - name: Add prometheus-community Repository
        run: |
          helm repo add jetstack https://charts.jetstack.io
          helm repo update

      - name: Deploy Cert Manager Chart
        run: |
          helm install \
            cert-manager jetstack/cert-manager \
            --namespace cert-manager \
            --create-namespace \
            --version v1.6.1 \
            --set installCRDs=true
          kubectl -n cert-manager wait --for=condition=Ready pods --all

      - name: Deploy Webhook Ovh
        run: |
          helm install \
            cert-manager-webhook-ovh ./src/cert-manager-webhook-ovh \
             --set groupName='acme.${{ secrets.K8S_DOMAIN }}'
          kubectl -n cert-manager wait --for=condition=Ready pods --all

      - name: Deploy Issuer Lets encrypt
        run: |
          helm install \
            cert-manager-webhook-ovh-issuer ./src/cert-manager-webhook-ovh-issuer \
            --namespace cert-manager \
            --set groupName='acme.${{ secrets.K8S_DOMAIN }}' \
            --set email='${{ secrets.CONTACT_EMAIL }}' \
            --set applicationKey='${{ secrets.OVH_APP_KEY }}' \
            --set applicationSecret='${{ secrets.OVH_APP_SECRET }}' \
            --set consumerKey='${{ secrets.K8S_OVH_CONSUMER_KEY }}'

      - name: Delete Kubeconfig
        run: rm /tmp/kubeconfig
